blogdown::new_site()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_theme("gcushen/hugo-academic", theme_example=TRUE, update_config = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
# make the filenames more consistent
filtered_names = selected %>%
group_by(artist) %>%
mutate(n = row_number()-1) %>%
mutate(newnames = paste0(artist, n))
install.packages("here")
install.packages("beepr")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE, warning=FALSE, error=FALSE, message=FALSE)
# import packages
library(rvest)
library(stringr)
library(tidyverse)
library(purrr)
library(here)
library(beepr)
library(DT)
if(!require(rvest)) {
install.packages("rvest")
library(rvest)
}
vignette("selectorgadget")
# donwload homebrew if it doesn't already exist
if(!dir.exists("/usr/local/Homebrew")) {
system('ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"')
}
# download phantomjs using homebrew
if(!dir.exists("/usr/local/Cellar/phantomjs")) {
system("brew install phantomjs")
}
# write the javascript code to a new file, scrape.js
writeLines("var url = 'http://therapboard.com';
var page = new WebPage();
var fs = require('fs');
page.open(url, function (status) {
just_wait();
});
function just_wait() {
setTimeout(function() {
fs.write('1.html', page.content, 'w');
phantom.exit();
}, 2500);
}
", con = "scrape.js")
js_scrape <- function(url = "http://therapboard.com",
js_path = "scrape.js",
phantompath = "/usr/local/Cellar/phantomjs/2.1.1/bin/phantomjs"){
# this section will replace the url in scrape.js to whatever you want
lines <- readLines(js_path)
lines[1] <- paste0("var url ='", url ,"';")
writeLines(lines, js_path)
command = paste(phantompath, js_path, sep = " ")
system(command)
}
js_scrape()
# read the newly created html file
html <- read_html("1.html")
# write the javascript code to a new file, scrape.js
writeLines("var url = 'http://therapboard.com';
var page = new WebPage();
var fs = require('fs');
page.open(url, function (status) {
just_wait();
});
function just_wait() {
setTimeout(function() {
fs.write('1.html', page.content, 'w');
phantom.exit();
}, 2500);
}
", con = "scrape.js")
js_scrape <- function(url = "http://therapboard.com",
js_path = "scrape.js",
phantompath = "/usr/local/Cellar/phantomjs/2.1.1/bin/phantomjs"){
# this section will replace the url in scrape.js to whatever you want
lines <- readLines(js_path)
lines[1] <- paste0("var url ='", url ,"';")
writeLines(lines, js_path)
command = paste(phantompath, js_path, sep = " ")
system(command)
}
js_scrape()
# import packages
library(rvest)
library(stringr)
library(tidyverse)
library(purrr)
library(here)
library(beepr)
library(DT)
blogdown:::serve_site()
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
